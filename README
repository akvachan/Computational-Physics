                            Computational Physics Utilities
                                    Version 1.0, 2023
DESCRIPTION

This repository contains a collection of C++ utilities and functions
commonly used in computational physics. The main components include
functions for:

  * Numerical differentiation
  * Combinatorial calculations (e.g., binomial coefficients)
  * Unit conversions, such as converting decimal integers to binary
    representations

The code is organized into modular components with separate headers and
implementations for each functionality, ensuring clarity, reusability, and
maintainability.

DIRECTORY STRUCTURE
   
  Docs/                           - Contains PDF documentation and Doxyfile
  In/                             - Input files to the program can be saved here
  Include/                        - All header files
      MathUtils.hpp               - Header file for combinatorial functions
      DerivativeCalculator.hpp    - Header file for numerical differentiation
      UnitConverter.hpp           - Header file for unit conversion functions
  Out/                            - Output of the programs may be saved here
  Source/                         - All core source files
  Tests/                          - Test suits
  Utils/                          - For utilities and helper functions
      MathUtils.cpp               - Implementation of combinatorial functions
      DerivativeCalculator.cpp    - Implementation of numerical differentiation
      UnitConverter.cpp           - Implementation of unit conversion functions

DEPENDENCIES

This project is implemented in standard C++20 and does not have any external
dependencies.

INSTALLATION AND SETUP

  1. Clone the Repository

  To begin, clone the repository using the following command:

      git clone https://github.com/akvachan/Computational-Physics.git
      cd Computational-Physics

  2. Build the project and run main.cpp file

  This repository uses CMake to manage builds. Run the following command
  to create a build directory, configure the project, compile and run main.cpp:

      ./main.sh

DOCUMENTATION

All functions and files are documented using Doxygen-style comments. You can
generate the documentation using Doxygen:

   doxygen Docs/Doxyfile
   
   Optional (if PDF is preferred):
   cd Docs/latex
   make pdf
   cd ../../
   
View html by opening Docs/html/index.html
View pdf by opening Docs/latex/refman.pdf 

LICENSE

This project is licensed under the Apache License. See LICENSE for more details.
